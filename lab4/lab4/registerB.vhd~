--	Name: Rodrigo Rojas
--	Contact: rrojas@clemson.edu
--	Purpose: Shifting Register


LIBRARY ieee;
USE ieee.std_logic_1164.ALL;


ENTITY registerB IS 
	GENERIC (n: INTEGER := 8);
	PORT (nBits: IN std_logic_vector((n-1) DOWNTO 0);
			twoBits : IN std_logic(1 DOWNTO 0);
			clock : IN std_logic;
			Q : OUT std_logic_vector((n-1) DOWNTO 0)
			);
END registerB;

ARCHITECTURE behavior_registerB OF registerB IS
	SIGNAL shiftBits : std_logic_vector(1 DOWNTO 0);
	SIGNAL allBits: std_logic_vector((n-1) DOWNTO 0);
BEGIN
	shiftBits <= twoBits;
	allBits <= nBits;
	PROCESS(clock)
		BEGIN
			IF RISING_EDGE(clock) THEN
				FOR i IN 0 TO (n-3) LOOP
					allBits(i) <= allBits(i + 2);
				END LOOP;
				allBits(6) <= twoBits(0);
				allBits(7) <= twoBits(1);
			END IF;
	END PROCESS;
	Q <= allBits;
END behavior_registerB;
